on:
  workflow_call:

jobs:
  calculate-vars:
    runs-on: ubuntu-latest

    outputs:
      vars: ${{ steps.vars.outputs.vars }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Variables
        id: vars
        run: |
          tag_name="${GITHUB_REF#refs/*/}"
          package_name="${GITHUB_REPOSITORY#*/}"
          # on bad error message there could be a newline which would be a syntax error on json creation
          message_text=$(echo "${{ github.event.head_commit.message }}" | tr -d '\n')
          # [.] instead of \. to get rid of json parsing problems of regex
          tag_name_pattern="^v[0-9]+[.][0-9]+[.][0-9]+$"
          commit_message_pattern="^Release[[:space:]]v[0-9]+[.][0-9]+[.][0-9]+$"
          package_version_pattern="Release $tag_name"
          vars=$(
            echo "{ \"tag_name\": \"$tag_name\", \"package_name\": \"$package_name\", \"message_text\": \"$message_text\", \"patterns\": { \"tag_name\": \"$tag_name_pattern\", \"commit_message\": \"$commit_message_pattern\", \"package_version\": \"$package_version_pattern\"} }"
          )
          echo "----------------------"
          echo $vars
          echo "----------------------"
          echo "vars=$vars" >> $GITHUB_OUTPUT

  check-prerequisites:
    needs: calculate-vars
    runs-on: ubuntu-latest
    name: Check about the prerequisites

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Package version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.1.1

      - name: Check Tag Name
        run: |
          vars=${{ fromJson(needs.calculate-vars.outputs.vars) }}
          echo "vars $vars.tag_name"

          # tag_name=$(jq ".tag_name" <(echo "${{ needs.calculate-vars.outputs.vars }}"))
          # echo "tag_name $tag_name"
          # tag_name=$(echo "${{ needs.calculate-vars.outputs.vars }}" | jq ".tag_name")
          # echo "tag_name $tag_name"
          if [[ ! $vars.tag_name =~ $vars.patterns.tag_name ]]
          then
            echo "Tag does not follow following convention ${{ env.patterns.tag_name }}!!!"
            exit 1
          fi

      - name: Check Commit Message
        run: |
          if [[ ! ${{ env.vars.message_text }} =~ ${{ env.patterns.commit_message }} ]]
          then
            echo "Publish failed: Commit message not conform (${{ env.patterns.commit_message }})!!!"
            exit 1
          fi

      - name: Check Commit Version
        run: |
          if [[ ! "${{ env.vars.message_text }}" == "${{ env.patterns.package_version }}" ]]
          then
              echo "Publish failed: Commit version not match!!!"
              echo "Tag: ${{ env.vars.tag_name }} Message: ${{ env.vars.message_text }}"
              exit 1

          fi

      - name: Check Package Version
        run: |
          if [[ ! "v${{ steps.extract_version.outputs.version }}" == "${{ env.vars.tag_name }}" ]]
          then
              echo "Publish failed: Package version not match!!!"
              echo "Package version: ${{ steps.extract_version.outputs.version }} Tag version: ${{ env.vars.tag_text }}"
              exit 1
          fi
